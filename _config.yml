# 서버 시작 명령어 bundle exec jekyll serve
# Site
repository: sproogen/resume-theme
favicon: images/favicon.ico

# 구성 버전 
version: 2

# 개인정보
name: Resume _ 김현기
# 다크 모드 설정 (options: true, false, never)
darkmode: never

# 소셜 링크
# github_username: Whale0928

# 아이콘 추가 시 경로 추가

about_profile_image: images/profile.jpg

#자기소개
about_content:
  |
  <style>
    .mini_title {
      display: inline-block;
      font-weight: bold;
      font-size: 15px;
      margin: 3px 0;
      width: 60px;
    }
    .mini_content {
      display: inline-block;
      font-size: 12px;
    }
    #name{
        font-size: 30px;
        font-weight: bold;
    }
    #sub_name{
        font-size: 20px;
        font-weight: bold;
    }
  </style>
  <section>
    <div id='name'>김현기</div>
    <div id='sub_name'>Back-End Developer</div>
    <div>
        <div class="mini_title">email</div>
        <div class="mini_content"> rlagusrl928@gmail.com</div>
    </div>
    <div>
        <div class="mini_title">phone</div>
        <div class="mini_content"> 010 9916 1042</div>
    </div>
    <div>
        <div class="mini_title">blog</div>
        <div class="mini_content">
            <a href="https://velog.io/@disdos0928">https://velog.io/@disdos0928</a>
        </div>
    </div>
    <div>
        <div class="mini_title">Github</div>
        <div class="mini_content">
            <a href="https://github.com/whale0928">https://github.com/whale0928</a>
        </div>
    </div>
  </section>


content:
  #경력
  - title: Work Experience - 경력
    layout: text
    content: |
      <style>
      .tech-stack {
      background: ivory;
      padding: 8px;
      margin: 3px;
      border-radius: 10px;
      }
      
      article {
      font-size: 14px;
      }
      
      .sub-title {
      font-size: 15px;
      font-weight: bold;
      margin-bottom: 5px;
      }
      
      </style>
      
      <section
      style="background-color:rgba(000,102,000,0.1); padding:30px; border-radius:14px; font-size:14px; margin-top:20px">
      <section id="title" style="text-align: left;">
        <div style="font-weight: bold; font-size: 34px; margin-bottom: 5px">SGU</div>
        <div style="font-weight: bold; font-size: 15px;">IT 2팀/사원</div>
        <div style="font-weight: bold; font-size: 15px;">2022.08 ~ 재직중</div>
      </section>
    
      
      <article>
      사내의 인적,물적등 모든 자원을 효율적으로 관리 할 수 있는 ERP<br>
      그중 패션 분야에 특화된 ERP 서비스 개발 및 유지보수 전문 회사입니다.<br>
      스노우피크,네셔널지오그래픽,네파 등 다양한 패션 브랜드의 ERP 서비스를 개발하고 있습니다.<br>
      </article>
    
      <hr>
      
      <div style='font-size:20px; font-weight:bold;'>📐주요 활용 기술</div>
      <article style="margin: 15px">
      <span class="tech-stack">Java</span>
      <span class="tech-stack">Oracle</span>
      <span class="tech-stack">JavaScript</span>
      <span class="tech-stack">Confluence</span>
      <span class="tech-stack">Git</span>
      <span class="tech-stack">Jenkins</span>
      <span class="tech-stack">Linux</span>
      </article>
      
      <hr>
      
      <div style='font-size:20px; font-weight:bold'> 💼 업무 경험</div>
      <article>
        <div class="sub-title">조회를 위한 중복 쿼리 최적화</div>
        단순 조회를 위해 불필요한 카운팅 쿼리 수행이 발생.<br>
        카운팅용 쿼리를 별도로 수행하지 않고 어플리케이션 서버에서 결과를 검증 하도록 개선<br>
        사용자 경험 향상 및 DB 부하 감소로 서버 안정성 증가.
      </article>
      <article>
      <div class="sub-title">ERP 와 Groupware 간 전자결재 연동 기능 개발.</div>
      ERP 서비스와 사내 Groupware 서비스간 결재 연동을 위한 API 모델들이 다수 필요<br>
      자체적으로 연동에 필요한 각 주요 기능 설계 후 공통 모듈 개발<br>
      타 파트에서도 공통된 모듈을 활용하여 프로젝트를 진행하며 발생한 공통적인 부서,회계 등 다양한 문제 대응에 효과적으로 대응.<br>
      성공적인 모듈 개발로 인해 예상 개발 시간을 4/1 수준으로 단축.
      </article>
      <article>
      <div class="sub-title">통계성 데이터 처리 및 조회 경험</div>
      브랜드별 년매출, 품목별 년매출, 시즌별 목표 실적 등등 대규모 데이터를 다루다 보니 수많은 통계성 데이터 처리 필요<br>
      보다 효율적이고 가독성을 높히기 위한 쿼리 작성을 위해 인덱스,캐시,with-as 문등을 활용하여 성능과 가독성 향상.<br>
      이를 통해 데이터의 정합성을 유지하면서도 빠른 조회를 가능하게 함. 또한 수정이 진행될 때마다 높은 가독성으로 인행 효율적인 수정이 가능.
      </article>
      <article>
      <div class="sub-title">커뮤니티 서비스를 구축</div>
      기존 커뮤니티 단일 구현과 사용자의 다양한 사용 목적이 매우 상이해 재개발이 필요. <br>
      추가적인 고객협의를 거쳐 재설계 후 DB 모델링과 서비스 구현  <br>
      이를 기존 단일화된 커뮤니티에서 여러 추상화된 모델을 통해 각 CS , 매장별 등 다양한 커뮤니티로 활용 가능, 또한 유지보수성 증
      </article>
      <article>
      <div class="sub-title">공통 기능 리팩토링 구현</div>
      많은 서비스가 있다 보니 사용되는 여러 공통 컴포넌트들이 존재 그로 인해 하나의 공통로직의 코드가 과도하게 중복되고 무거워지는 문제 발생.<br>
      많은 회의를 통해 각 도메인 별로 공통 서비스 추상화 후 메소드 , 클래스레벨로 분리 <br>
      이를 기존 단일화된 커뮤니티에서 여러 추상화된 모델을 통해 각 CS , 매장별 등 다양한 커뮤니티로 활용 가능, 또한 유지보수성 증가
      </article>
      </section>


  #프로젝트
  - title: Projects - 프로젝트
    layout: text
    content: |
      <style>
          .tech-stack {
              background: ivory;
              padding: 8px;
              margin: 3px;
              border-radius: 10px;
          }
      
          article {
              font-size: 14px;
          }
          a{
              text-decoration: none;
              color: black;
          }
          b{
              font-weight: bold;
              font-size: 15px;
          }
          article{
              margin: 20px 0px;
          }
          .t3{
              font-size: 17px;
              font-weight: bold;
              margin: 20px 0;
          }
          .link_btn{
              border: 1px solid ivory;
              background: ivory;
              height: 30px;
              border-radius: 3px;
              overflow: hidden;
          }
          .link_btn_expr{
              border: 1px solid ivory;
              background: rgba(000,102,000,0.1);
              height: 30px;
              border-radius: 3px;
          }
      
          .link_btn_expr:hover{
              border: 1px solid lightgray;
              background: ivory;
              border-radius: 3px;
              overflow: hidden;
          }
      </style>
      
      <section style="background-color:rgba(000,102,000,0.1); padding:30px; border-radius:14px; font-size:14px;"> 
      
        <div style="font-weight:bold; font-size: 34px;">PetLink</div>
        <div style="font-weight:bold; font-size: 18px;">2023-03 ~ 2023-08</div>
        <button class="link_btn"><a href="https://github.com/f-lab-edu/petLink">Github</a></button>
        <button class="link_btn"><a href="https://f-lab-edu.github.io/petLink/">API Document </a></button>
        <button class="link_btn"><a href="http://petlink.cloud/">API Server</a></button>

        <br>  
      
        <article>
          🐕 petLink는 반려동물 용품 구매와 동시에 펀딩에 참여할 수 있는 플랫폼입니다.<br>
          펀딩 외에도 유기동물 분양, 중고장터, 커뮤니티 등의 기능을 추후 제공할 여지가 있어.<br>
          추후 확장 가능한 서비스를 목적으로 개발을 진행했습니다.
       </article>  
      
            <div class='t3'>🖥️ 사용 기술 및 환경</div>
              <span class="tech-stack"> JAVA 17 </span>
              <span class="tech-stack"> SpringBoot 3.0.5 </span>
              <span class="tech-stack"> MySql 8.0 </span>
              <span class="tech-stack"> JPA  </span>
              <span class="tech-stack"> QueryDSL  </span>
              <span class="tech-stack"> NCP(NAVER CLOUD PLATFORM)  </span>
              <span class="tech-stack"> GitHub-action  </span>
      
            <div>
              <div class='t3'>🔍 주요 관심사 / 목표</div>
              <ul style='font-size:14px; padding:10px;'>
                <li> 기능 하나하나를 깊게 고민해서 완성도 있게 구현하는 경험 </li>
                <li> 코드 리뷰를 통해 고품질의 코드를 작성하는 경험 </li>
                <li> 대용량 트래픽을 발생시켜 경험하고 처리하는 경험 </li>
                <li> 분산환경을 구축해보고 서비스간 연동해보는 경험  </li>
                <li> 추후 확장 가능한 , 성장 가능한 서비스를 만드는 경험 </li>
              </ul>
            </div>
      
                <hr>
      
            <div style= 'font-size:20px; font-weight:bold'> 🚧 경험</div><br>
      
              <article style= 'font-size:14px;'>
              <div class='t3'>문서화 중시</div>
              마일스톤과 깃허브 프로젝트 등을 활용한 일정 관리.<br>
              인프라, 코드들을 포스팅하여 기록들을 관리<br>
              <b>API 문서화</b>를 통해 프로젝트의 투명성과 협업 효율성 증대. <br><br>
              <button class="link_btn_expr"><a href="https://velog.io/@disdos0928">             Blog (블로그) </a></button>
              <button class="link_btn_expr"><a href="https://f-lab-edu.github.io/petLink/">     API 문서 </a></button>      
              </article>
      
              <article style= 'font-size:14px;'>
              <div class='t3'>JPA Auditing 충돌</div>
              JPA Auditing을 통한 생성자와 수정자 기록 중 충돌 문제 발생.<br>
              CustomUserService를 통해 Member , Manager Entity를 생성자와 수정자를 구분하여 문제 해결.<br>
              충돌 해결을 통해 데이터 무결성 유지 및 서비스 안정성 확보.<br>
              결과적으로 DB의 데이터 효율성을 얻고 , 객체로 다루기 쉽게 설계하면서. 기록성 데이터를 남기기 쉽게 되었음<br><br>
                <button class="link_btn_expr">
                <a href="https://velog.io/@disdos0928/%EB%91%90-%EA%B0%80%EC%A7%80-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%97%94%ED%8B%B0%ED%8B%B0%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-JPA-Auditing-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0%EC%9E%91%EC%84%B1%EC%A4%91">
                  (Blog) 두개의 엔티티를 사용하면서 JPA Auditing 적용하기
                </a>
                </button>
              </article>
      
              <article style= 'font-size:14px;'>
                <div class='t3'>중복되지 않는 키를 만들면서 효율성을 극대화</div>
                중복되지 않는 주문번호 생성이 필요, 하지만 성능또한 고려해야함 <br>
                UUID , 발급 서버 , DB 접근등 여러 방면의 조건을 고려 <br>
                중복되지 않으면서 + 다중화 환경에서도 활용가능하고 + 성능면에서 효율적인 스노우플레이크 방식 구현 <br><br>
                <button class="link_btn_expr">
                  <a href='https://velog.io/@disdos0928/DB%EC%97%90-%EC%A0%91%EA%B7%BC%ED%95%98%EC%A7%80-%EC%95%8A%EC%9C%BC%EB%A9%B4%EC%84%9C-%EC%A3%BC%EB%AC%B8%EB%B2%88%ED%98%B8%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%9C%EB%8B%A4'>
                   (Blog) DB에 접근하지 않으면서 주문번호를 생성해야한다.
                  </a>
                </button>
              </article>
      
              <article style= 'font-size:14px;'>
                <div class='t3'>효율적인 배포를 위한 CICD 구축</div>
                중복되지 않는 주문번호 생성이 필요, 하지만 성능또한 고려해야함 <br>
                UUID , 발급 서버 , DB 접근등 여러 방면의 조건을 고려 <br>
                중복되지 않으면서 + 다중화 환경에서도 활용가능하고 + 성능면에서 효율적인 스노우플레이크 방식 구현 <br><br>
              </article>
      
      </section>
      
      <br><br>
      
      <section style="background-color:rgba(000,102,000,0.1); padding:30px; border-radius:14px; font-size:14px;">       
            <div style="font-weight:bold; font-size: 34px;">AllWeAdopt</div>
            <div style="font-weight:bold; font-size: 18px;">2022-04 ~ 2022-08</div>

            <button class="link_btn"><a href="https://github.com/WouldYouAdopt">Github</a></button>
            <button class="link_btn"><a href="https://ovenapp.io/project/NOqCJlhArKAp4ob0uKBliJMQMCUAxXyL/">Wire Frame</a></button>
            <br>  <br>
      
            🐊 유기 동물을 위한 플랫폼 '포인핸드'를 벤치마킹한 사이트<br>
            유기동물 분양, 입양, 펀딩 ,포인트 게임 등의 기능등을 제공합니다.<br>
            6명의 팀원으로 진행 되어, 기능적인 학습 외에도 협업을 통한 프로젝트 진행 경험을 쌓을 수 있었습니다.<br><br>                
      
          <hr>

          <div class='t3'>🖥️ 사용 기술 및 환경</div>
          <span class="tech-stack"> JAVA</span>
          <span class="tech-stack"> Spring</span>
          <span class="tech-stack"> Mybatis</span>
          <span class="tech-stack"> Oracle</span>
          <span class="tech-stack"> HTML5/JS(ES6)</span>
          <span class="tech-stack"> Node.js</span>
          <span class="tech-stack"> AWS-Ec2</span>
      
          <div>
              <div class='t3'>🔍 주요 관심사 / 목표</div>
              <ul style='font-size:14px; '>
                  <li> 협업을 통한 프로젝트 경험</li>
                  <li> 모듈을 추가해 기능을 확장해보는 경험</li>
                  <li> 테이블 설계 디자인 경험</li>
                  <li> 페어 리뷰를 통한 코드 퀄리티 개선 경험</li>
                  <li> ERD, UseCase, wire-frame 등 여러 문서화 작업을 해보는 경험</li>
              </ul>
          </div>
          <hr>

          <div style= 'font-size:20px; font-weight:bold'> 🚧 경험</div><br>
            <article style= 'font-size:14px;'>
              <div style="font-size: 15px; font-weight: bold;">협업 경험</div>
              <ul>
                <li>팀 프로젝트를 진행하면서 '협업'의 중요성을 깊이 이해.</li>
                <li>패키지 구조, 반환 타입, 에러 대응 등의 문제를 팀원과 함께 논의를 통해 해결.</li>
                <li>의견 분쟁이 발생할 때는 중립적인 의견을 받아들여 문제를 해결.</li>
              </ul>
            </article> 

          <br>

         <article style= 'font-size:14px;'>
           <div style='font-size: 15px; font-weight: bold;'>채팅 모듈 구현</div>
            <ul>
              <li>'채팅 모듈' 구현에 처음 사용해보는 기술을 활용해 도전.</li>
              <li>Node.Js와 SSE 기반으로 채팅 기능을 구현.</li>
              <li>클라우드 서버를 처음으로 구축하여 별도의 채팅 서버를 구축.</li>
              <li>프로젝트에 제한적이지 않고, 기능의 목적을 위해 다양한 기술을 활용.</li>
            </ul>
          </article>
      </section>

  #교육,학습
  - title: Education - 교육 , 학습
    layout: list
    content:
      - layout: left
        title: F-LAB
        sub_title: 스스로 고민하면서 성장하는 멘토링 과정
        caption: 2023.02 ~ 2023.08
        description: |
          - 스스로 학습하는 것이 제일 중요한 멘토링 과정입니다.
          - 멘토님은 질문을 주어주며 스스로 학습 할 수 있도록 도와주는 과정
          - 진행되는 다양한 헤커톤 이벤트에 참여하며 가치있는 경험을 쌓을 수 있었습니다.
      - layout: left
        title: 클라우드 AWS 구축/운영
        sub_title: 과제를 통해 클라우드 환경 활용 과정
        caption: 2022.10 ~ 2022.12
        description: |
          - 가벼운 수준의 클라우드 환경 구축 및 운영을 경험
          - 매주 가상의 시나리오를 제공해 문제를 해결하며 경험하는 과정
          - AWS EC2 , EKS, CloudFormation , CloudWatch , IAM 등등을 경험
      - layout: left
        title: 한양사이버대학교
        sub_title: 컴퓨터 공학과
        caption: 2016.03 ~ 2023.03
        description: |
          - 컴퓨터 공학과를 전공하며 다양한 프로젝트를 진행하며 경험
          - 과정 동안 하드웨어와 소프트웨어 개발에 관심을 갖게 되었습니다

footer_show_references: true

remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
  - jekyll-seo-tag


